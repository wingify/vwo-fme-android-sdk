plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
    id 'com.gradleup.nmcp'
}

// Set project version
version = VERSION_NAME

// Load properties from local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {
    namespace 'com.vwo.sdk.fme'
    compileSdk 34

    defaultConfig {
        minSdk 21
        versionName VERSION_NAME
        buildConfigField 'String', 'SDK_VERSION', "\"$VERSION_NAME\""
        it.buildConfigField 'int', 'VERSION_CODE', "${project.VERSION_CODE}"
        it.buildConfigField 'String', 'VERSION_NAME', "\"${project.VERSION_NAME}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    sourceSets {
        test {
            resources.srcDirs 'src/test/resources'
            resources.srcDirs += ["src/test/resources/assets"]
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs '-Xmx2048m', '-Dfile.encoding=UTF-8'
                // Fix for XML parsing issues with mergeDebugUnitTestResources
                systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2'
                systemProperty 'robolectric.dependency.repo.id', 'central'
                // Prevent XML node null pointer exceptions
                systemProperty 'javax.xml.parsers.DocumentBuilderFactory', 'com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl'
            }
        }
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        // Disable XML parsing checks that might cause issues
        disable 'InvalidPackage', 'UnusedResources', 'ContentDescription'
    }
    publishing {
        singleVariant('release') {
            withJavadocJar()
        }
    }
}



afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME

                afterEvaluate {
                    from components.release
                }
                pom {
                    name = POM_ARTIFACT_ID
                    description = POM_DESCRIPTION
                    url = POM_URL
                    properties = [
                            versionCode: VERSION_CODE
                    ]
                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                        }
                    }
                    developers {
                        developer {
                            id = localProperties.getProperty('POM_DEVELOPER_ID') ?: 'vwo-team'
                            name = localProperties.getProperty('POM_DEVELOPER_NAME') ?: 'VWO Team'
                            email = localProperties.getProperty('POM_DEVELOPER_EMAIL') ?: 'integration@vwo.com'
                        }
                    }
                    scm {
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                        url = POM_URL
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'localDeploy'
                url = layout.buildDirectory.dir('staging-deploy')
            }
        }
    }
    
    // Configure signing after publishing is set up
    signing {
        // Only sign if required properties are available in local.properties
        required {
            localProperties.getProperty('signing.keyId') != null
        }
        
        // Set signing properties from local.properties
        if (localProperties.getProperty('signing.keyId')) {
            project.ext.'signing.keyId' = localProperties.getProperty('signing.keyId')
            project.ext.'signing.password' = localProperties.getProperty('signing.password')
            project.ext.'signing.secretKeyRingFile' = localProperties.getProperty('signing.secretKeyRingFile')
        }
        
        sign publishing.publications.release
    }
}

// Configure Maven Central Portal Publishing (NMCP)
nmcp {
    centralPortal {
        // Get credentials from local.properties
        username = localProperties.getProperty('mavenCentralUsername')
        password = localProperties.getProperty('mavenCentralPassword')
        
        // USER_MANAGED means upload to staging without auto-release
        // You control when to publish manually from the portal
        publishingType = "USER_MANAGED"
    }
}

dependencies {

    implementation("com.github.eprst:murmur3:0.4.3")
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")

    implementation "androidx.work:work-runtime-ktx:2.7.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation("com.github.eprst:murmur3:0.4.3")
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'org.mockito:mockito-inline:4.8.0'
    testImplementation 'com.google.code.gson:gson:2.11.0'
    testImplementation("org.robolectric:robolectric:4.12.2")
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation("io.mockk:mockk:1.12.0")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2")
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}